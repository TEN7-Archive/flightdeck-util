---
- hosts: all
  vars:
    digitalocean_api_token: "DIGITALOCEAN_API_KEY"
    cluster_name: "YOUR_CLUSTER_NAME"
    cluster_namespace: "YOUR_NAMESPACE"
  tasks:
    - name: Create a temp directory to store files needed by the run
      tempfile:
        state: directory
        prefix: "ansible-deploy-{{ cluster_name }}"
      register: _run_temp_dir
      notify:
        - delete temp items
    - name: Get the kubeconfig file.
      import_role:
        name: ten7.digitalocean_kubeconfig
      vars:
        digitalocean_kubeconfig:
          cluster: "{{ cluster_name }}"
          kubeconfig: "{{ _run_temp_dir.path }}/kubectl.yaml"
    - name: Generate an .htpasswd
      htpasswd:
        path: "{{ _run_temp_dir.path }}/.htpasswd"
        state: present
        name: "{{ item.user }}"
        password: "{{ item.pass }}"
      loop:
        - user: "knockknock"
          pass: "SUPPLIES!"

    - name: Test flightdeck_cluster
      include_role:
        name: "ten7.flightdeck_cluster"
      vars:
        flightdeck_cluster_kubeconfig: "{{ _run_temp_dir.path }}/kubectl.yaml"
        flightdeck_cluster:
          namespace: "{{ cluster_namespace }}"
          secrets:
            - name: "auth-test-delete-later"
              data:
                - name: "auth"
                  value: "{{ lookup('file', _run_temp_dir.path + '/.htpasswd' )}}"

  handlers:
    - name: delete temp items
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ _run_temp_dir.path }}"
